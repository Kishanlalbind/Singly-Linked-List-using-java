 public class SinglyLinkedList{
    private ListNode head;
    private static class ListNode{
        private int data ;
        private ListNode next;
        public ListNode(int data){
            this.data=data;
            this.next=null;
        }
    }
    //disply the linked list
    public void disply(){
        ListNode current=head;
        while(current!=null){
            System.out.print(current.data);
            current=current.next;
        }
        System.out.print("null");
    }
    //lenght of the linked list
    public int length(){
        if(head==null){
            return 0;
        }
        int count=0;
        ListNode current=head;
        while(current!=null){
            count++;
            current=current.next;
        }
        return count;
    }
    //insert data at first node
    public void insertFirst(int value){
        ListNode newNode=new ListNode(value);
        newNode.next=head;
        head=newNode;
    }
    //insert data at last node
    public void insertLast(int value){
        ListNode newNode=new ListNode(value);
        if(head==null){
            head=newNode;
            return;
        }
        ListNode current=head;
        while(current.next!=null){
            current=current.next;
        }
        current.next=newNode;
    }
    //delete the First node
    public ListNode deleteFirst(){
        if(head==null){
            return null;
        }
        ListNode temp=head;
        head=head.next;
        temp.next=null;
        return temp;
    }
    //deleteLast
    public ListNode deleteLast(){
        if(head==null || head.next==null){return head; }
        ListNode current=head;
        ListNode previous=null;
        while(current.next!=null){
            previous=current;
            current=current.next;
        }
        previous.next=null;
        return current;
    }
    //Delete at a given positions
    public void insert(int position,int value){
        ListNode node=new ListNode(value);
        if(position==1){
            node.next=head; head=node;
        }
        else{
            ListNode previous=head;
            int count=1;
            while(count<position-1){
                previous=previous.next; count++;
            }
            ListNode current=previous.next;
            previous.next=node;
            node.next=current;
        }
    }
   // Main method
    public static void main(String[] args){
        SinglyLinkedList sll=new SinglyLinkedList();
        sll.head=new ListNode(10);
        ListNode second=new ListNode(1);
        ListNode third=new ListNode(8);
        ListNode fourth=new ListNode(11);
        sll.head.next=second;
        second.next=third;
        third.next=fourth;
       /* sll.disply();
       sll.length();
       sll.insertFirst(3);
       sll.insertLast(6);
       sll.disply();
       sll.deleteFirst();
       sll.disply();
       sll.deleteLast();
       sll.disply();
       sll.insert(2,1);
       sll.disply();
       */
    }
}
